% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvsemodel.R
\name{fitting}
\alias{fitting}
\alias{fitting,mvsemodel-method}
\title{Draw samples from the model defined by class \code{mvsemodel}}
\usage{
\S4method{fitting}{mvsemodel}(
  object,
  iter = 10^5,
  warmup = 0.5,
  seed = sample.int(.Machine$integer.max, 1),
  init = c(rho = 1, eta = 10, alpha = 3),
  gauJump = c(rho = 0.5, eta = 2, alpha = 2),
  smoothing = NULL,
  samples = 1000,
  verbose = FALSE
)
}
\arguments{
\item{object}{An object of class \code{\linkS4class{mvsemodel}}.}

\item{iter}{A positive integer specifying the number of MCMC steps to run the routine for.}

\item{warmup}{A real value between 0 and 1 specifying the proportion of MCMC steps to be considered warmup.
The warmup samples are discarded and are not used for inference.}

\item{seed}{The seed for random number generation. The default is generated from 1 to the maximum integer supported by \code{R} on the machine.}

\item{init}{A named list specifying the initial guesses for the factors in the MCMC routine. Elements include
\code{rho}, \code{eta} and \code{alpha} representing the initial guesses of the factors rho, eta and (alpha) respectively.
\code{alpha} does not need to be specified for MVSE models of category \code{"aegypti"}.}

\item{gauJump}{A named list specifying the standard deviations of the Gaussian proposal distributions for the factors in
the MCMC routine. Elements include \code{rho}, \code{eta} and \code{alpha} representing the standard deviations
of the Gaussian proposal distributions of rho, eta and alpha respectively. \code{alpha} does not need to be specified
for MVSE models of category \code{"aegypti"}.}

\item{smoothing}{An optional positive integer used for smoothing the climate data. For example,
7 will smooth the time series using +- 7 time points per existing point (up and down that point).}

\item{samples}{A positive integer specifying the number of samples to draw from the estimated posterior distributions of rho, eta and alpha
to estimate the time series of index P, Q and V0.}

\item{verbose}{\code{TRUE} or \code{FALSE}: flag indicating whether to print intermediate output from the MCMC routine
to the console, which may be helpful for determining progress of algorithm. The default is \code{FALSE}.}
}
\value{
An object of S4 class \code{mvsefit} representing the fitted results along with additional relevant data.
}
\description{
An MCMC routine (Metropolis-Hastings algorithm) is run to draw samples of factors rho,
eta and alpha from the model defined by class \code{mvsemodel}. The resulting posterior distributions
of these factors are then used to draw samples of the time series of index P, Q and V0.
}
\examples{
# obtain climate data
data(climateFSA)

# define a mvse model 
priors <- list()
priors$mosq_life_exp <- list(dist="normal", pars=c(mean=12, sd=2)) # mosquito life expectancy (days)
priors$mosq_inc_per <- list(dist="normal", pars=c(mean=7, sd=2))   # mosquito-virus incubation period (days)
priors$mosq_biting_freq <- list(dist="normal", pars=c(mean=0.25, 0.01)) # mosquito biting frequency (bites/female/day)
priors$human_life_exp <- list(dist="normal", pars=c(mean=71.1, sd=2)) # human life expectancy (years)
priors$human_inc_per <- list(dist="normal", pars=c(mean=5.8, sd=1)) # human-virus incubation period (days)
priors$human_inf_per <- list(dist="normal", pars=c(mean=5.9, sd=1)) # human-virus infectious period (days)
user_model <- mvse_model(model_name="my_mvse_model", climate_data=climateFSA, priors=priors)

# run the MCMC sampling procedure to estimate the epi-entomological parameters as well Index P, Q and V0
user_fit <- fitting(object=user_model, iter=10^5, warmup=0.2, seed=123, init=c(rho=1, eta=10, alpha=3), samples=1000)

}
\seealso{
\code{\linkS4class{mvsemodel}} and \code{\linkS4class{mvsefit}}
}
